name: Build and Release

on:
  release:
    types: [created]

permissions:
  contents: write          # allow upload to the Release

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      # 1. Checkout
      - uses: actions/checkout@v4

      # 2. Extract the tag (keeps your existing env usage)
      - id: get_tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> "$GITHUB_OUTPUT"

      # 3. Prime the module cache & Go build cache
      - name: Setup Go
        uses: actions/setup-go@v5        # Go 1.21.x is the current default
        with:
          go-version: '1.21'
          cache: true                    # built‑in cache (no extra action)

      # 4. Cross‑compile for linux/amd64 + linux/arm64 with CGO enabled
      - name: Build multi‑arch binaries
        uses: crazy-max/ghaction-xgo@v3
        with:
          xgo_version: latest            # pulls the latest xgo container
          go_version: 1.21
          dest: dist                     # output folder
          prefix: clab-api-server        # binary base name
          pkg: ./cmd/server              # entry‑point package
          targets: linux/amd64,linux/arm64
          v: true                        # verbose build output
          ldflags: -s -w                 # strip debug info

      # 5. Upload both binaries to the GitHub Release that triggered the job
      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/clab-api-server-linux-amd64
            dist/clab-api-server-linux-arm64